{"ast":null,"code":"/**\n * A set of lodash-style generic utilities.\n */\n\n/**\n * Generate an array of integers from 0 (inclusive) to n (exclusive)\n * eg. range(4) // [0, 1, 2, 3]\n */\nexport const range = n => [...Array(n).keys()];\n\n/**\n * Pad a number with 0s.\n * eg. zeroPadNumber(5) -> \"05\"\n *     zeroPadNumber(20, 4) -> \"0020\"\n */\nexport const zeroPadNumber = function (n) {\n  let spaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  return String(n).padStart(spaces, '0');\n};","map":{"version":3,"names":["range","n","Array","keys","zeroPadNumber","spaces","arguments","length","undefined","String","padStart"],"sources":["/Users/pavel/Dev/Github repos/css-for-js/character-creator/src/utils.js"],"sourcesContent":["/**\n * A set of lodash-style generic utilities.\n */\n\n/**\n * Generate an array of integers from 0 (inclusive) to n (exclusive)\n * eg. range(4) // [0, 1, 2, 3]\n */\nexport const range = (n) => [...Array(n).keys()];\n\n/**\n * Pad a number with 0s.\n * eg. zeroPadNumber(5) -> \"05\"\n *     zeroPadNumber(20, 4) -> \"0020\"\n */\nexport const zeroPadNumber = (n, spaces = 2) =>\n  String(n).padStart(spaces, '0');\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,KAAK,GAAIC,CAAC,IAAK,CAAC,GAAGC,KAAK,CAACD,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC;;AAEhD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAG,SAAAA,CAACH,CAAC;EAAA,IAAEI,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,OACzCG,MAAM,CAACR,CAAC,CAAC,CAACS,QAAQ,CAACL,MAAM,EAAE,GAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}