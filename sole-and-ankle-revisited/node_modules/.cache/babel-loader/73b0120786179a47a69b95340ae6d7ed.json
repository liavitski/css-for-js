{"ast":null,"code":"var $g2vWm$babelruntimehelpersextends = require(\"@babel/runtime/helpers/extends\");\nvar $g2vWm$react = require(\"react\");\nvar $g2vWm$radixuiprimitive = require(\"@radix-ui/primitive\");\nvar $g2vWm$radixuireactprimitive = require(\"@radix-ui/react-primitive\");\nvar $g2vWm$radixuireactcomposerefs = require(\"@radix-ui/react-compose-refs\");\nvar $g2vWm$radixuireactusecallbackref = require(\"@radix-ui/react-use-callback-ref\");\nvar $g2vWm$radixuireactuseescapekeydown = require(\"@radix-ui/react-use-escape-keydown\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n$parcel$export(module.exports, \"DismissableLayer\", () => $d715e0554b679f1f$export$177fb62ff3ec1f22);\n$parcel$export(module.exports, \"DismissableLayerBranch\", () => $d715e0554b679f1f$export$4d5eb2109db14228);\n$parcel$export(module.exports, \"Root\", () => $d715e0554b679f1f$export$be92b6f5f03c0fe9);\n$parcel$export(module.exports, \"Branch\", () => $d715e0554b679f1f$export$aecb2ddcb55c95be);\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\nconst $d715e0554b679f1f$var$DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst $d715e0554b679f1f$var$CONTEXT_UPDATE = 'dismissableLayer.update';\nconst $d715e0554b679f1f$var$POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst $d715e0554b679f1f$var$FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\nlet $d715e0554b679f1f$var$originalBodyPointerEvents;\nconst $d715e0554b679f1f$var$DismissableLayerContext = /*#__PURE__*/$g2vWm$react.createContext({\n  layers: new Set(),\n  layersWithOutsidePointerEventsDisabled: new Set(),\n  branches: new Set()\n});\nconst $d715e0554b679f1f$export$177fb62ff3ec1f22 = /*#__PURE__*/$g2vWm$react.forwardRef((props, forwardedRef) => {\n  var _node$ownerDocument;\n  const {\n    disableOutsidePointerEvents = false,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onPointerDownOutside: onPointerDownOutside,\n    onFocusOutside: onFocusOutside,\n    onInteractOutside: onInteractOutside,\n    onDismiss: onDismiss,\n    ...layerProps\n  } = props;\n  const context = $g2vWm$react.useContext($d715e0554b679f1f$var$DismissableLayerContext);\n  const [node1, setNode] = $g2vWm$react.useState(null);\n  const ownerDocument = (_node$ownerDocument = node1 === null || node1 === void 0 ? void 0 : node1.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;\n  const [, force] = $g2vWm$react.useState({});\n  const composedRefs = $g2vWm$radixuireactcomposerefs.useComposedRefs(forwardedRef, node => setNode(node));\n  const layers = Array.from(context.layers);\n  const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n  const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n  const index = node1 ? layers.indexOf(node1) : -1;\n  const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n  const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n  const pointerDownOutside = $d715e0554b679f1f$var$usePointerDownOutside(event => {\n    const target = event.target;\n    const isPointerDownOnBranch = [...context.branches].some(branch => branch.contains(target));\n    if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n    onPointerDownOutside === null || onPointerDownOutside === void 0 || onPointerDownOutside(event);\n    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);\n    if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();\n  }, ownerDocument);\n  const focusOutside = $d715e0554b679f1f$var$useFocusOutside(event => {\n    const target = event.target;\n    const isFocusInBranch = [...context.branches].some(branch => branch.contains(target));\n    if (isFocusInBranch) return;\n    onFocusOutside === null || onFocusOutside === void 0 || onFocusOutside(event);\n    onInteractOutside === null || onInteractOutside === void 0 || onInteractOutside(event);\n    if (!event.defaultPrevented) onDismiss === null || onDismiss === void 0 || onDismiss();\n  }, ownerDocument);\n  $g2vWm$radixuireactuseescapekeydown.useEscapeKeydown(event => {\n    const isHighestLayer = index === context.layers.size - 1;\n    if (!isHighestLayer) return;\n    onEscapeKeyDown === null || onEscapeKeyDown === void 0 || onEscapeKeyDown(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }, ownerDocument);\n  $g2vWm$react.useEffect(() => {\n    if (!node1) return;\n    if (disableOutsidePointerEvents) {\n      if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n        $d715e0554b679f1f$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n        ownerDocument.body.style.pointerEvents = 'none';\n      }\n      context.layersWithOutsidePointerEventsDisabled.add(node1);\n    }\n    context.layers.add(node1);\n    $d715e0554b679f1f$var$dispatchUpdate();\n    return () => {\n      if (disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1) ownerDocument.body.style.pointerEvents = $d715e0554b679f1f$var$originalBodyPointerEvents;\n    };\n  }, [node1, ownerDocument, disableOutsidePointerEvents, context]);\n  /**\n  * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n  * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n  * and add it to the end again so the layering order wouldn't be _creation order_.\n  * We only want them to be removed from context stacks when unmounted.\n  */\n  $g2vWm$react.useEffect(() => {\n    return () => {\n      if (!node1) return;\n      context.layers.delete(node1);\n      context.layersWithOutsidePointerEventsDisabled.delete(node1);\n      $d715e0554b679f1f$var$dispatchUpdate();\n    };\n  }, [node1, context]);\n  $g2vWm$react.useEffect(() => {\n    const handleUpdate = () => force({});\n    document.addEventListener($d715e0554b679f1f$var$CONTEXT_UPDATE, handleUpdate);\n    return () => document.removeEventListener($d715e0554b679f1f$var$CONTEXT_UPDATE, handleUpdate);\n  }, []);\n  return /*#__PURE__*/$g2vWm$react.createElement($g2vWm$radixuireactprimitive.Primitive.div, $parcel$interopDefault($g2vWm$babelruntimehelpersextends)({}, layerProps, {\n    ref: composedRefs,\n    style: {\n      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? 'auto' : 'none' : undefined,\n      ...props.style\n    },\n    onFocusCapture: $g2vWm$radixuiprimitive.composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture),\n    onBlurCapture: $g2vWm$radixuiprimitive.composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture),\n    onPointerDownCapture: $g2vWm$radixuiprimitive.composeEventHandlers(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)\n  }));\n});\n/*#__PURE__*/\nObject.assign($d715e0554b679f1f$export$177fb62ff3ec1f22, {\n  displayName: $d715e0554b679f1f$var$DISMISSABLE_LAYER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\nconst $d715e0554b679f1f$var$BRANCH_NAME = 'DismissableLayerBranch';\nconst $d715e0554b679f1f$export$4d5eb2109db14228 = /*#__PURE__*/$g2vWm$react.forwardRef((props, forwardedRef) => {\n  const context = $g2vWm$react.useContext($d715e0554b679f1f$var$DismissableLayerContext);\n  const ref = $g2vWm$react.useRef(null);\n  const composedRefs = $g2vWm$radixuireactcomposerefs.useComposedRefs(forwardedRef, ref);\n  $g2vWm$react.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n  return /*#__PURE__*/$g2vWm$react.createElement($g2vWm$radixuireactprimitive.Primitive.div, $parcel$interopDefault($g2vWm$babelruntimehelpersextends)({}, props, {\n    ref: composedRefs\n  }));\n});\n/*#__PURE__*/\nObject.assign($d715e0554b679f1f$export$4d5eb2109db14228, {\n  displayName: $d715e0554b679f1f$var$BRANCH_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/ /**\n                                                                                                     * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n                                                                                                     * to mimic layer dismissing behaviour present in OS.\n                                                                                                     * Returns props to pass to the node we want to check for outside events.\n                                                                                                     */\nfunction $d715e0554b679f1f$var$usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {\n  const handlePointerDownOutside = $g2vWm$radixuireactusecallbackref.useCallbackRef(onPointerDownOutside);\n  const isPointerInsideReactTreeRef = $g2vWm$react.useRef(false);\n  const handleClickRef = $g2vWm$react.useRef(() => {});\n  $g2vWm$react.useEffect(() => {\n    const handlePointerDown = event => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = {\n          originalEvent: event\n        };\n        function handleAndDispatchPointerDownOutsideEvent() {\n          $d715e0554b679f1f$var$handleAndDispatchCustomEvent($d715e0554b679f1f$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {\n            discrete: true\n          });\n        }\n        /**\n        * On touch devices, we need to wait for a click event because browsers implement\n        * a ~350ms delay between the time the user stops touching the display and when the\n        * browser executres events. We need to ensure we don't reactivate pointer-events within\n        * this timeframe otherwise the browser may execute events that should have been prevented.\n        *\n        * Additionally, this also lets us deal automatically with cancellations when a click event\n        * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n        *\n        * This is why we also continuously remove the previous listener, because we cannot be\n        * certain that it was raised, and therefore cleaned-up.\n        */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, {\n            once: true\n          });\n        } else handleAndDispatchPointerDownOutsideEvent();\n      } else\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n    * if this hook executes in a component that mounts via a `pointerdown` event, the event\n    * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n    * this by delaying the event listener registration on the document.\n    * This is not React specific, but rather how the DOM works, ie:\n    * ```\n    * button.addEventListener('pointerdown', () => {\n    *   console.log('I will log');\n    *   document.addEventListener('pointerdown', () => {\n    *     console.log('I will also log');\n    *   })\n    * });\n    */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = true\n  };\n}\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction $d715e0554b679f1f$var$useFocusOutside(onFocusOutside, ownerDocument = globalThis === null || globalThis === void 0 ? void 0 : globalThis.document) {\n  const handleFocusOutside = $g2vWm$radixuireactusecallbackref.useCallbackRef(onFocusOutside);\n  const isFocusInsideReactTreeRef = $g2vWm$react.useRef(false);\n  $g2vWm$react.useEffect(() => {\n    const handleFocus = event => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = {\n          originalEvent: event\n        };\n        $d715e0554b679f1f$var$handleAndDispatchCustomEvent($d715e0554b679f1f$var$FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n  return {\n    onFocusCapture: () => isFocusInsideReactTreeRef.current = true,\n    onBlurCapture: () => isFocusInsideReactTreeRef.current = false\n  };\n}\nfunction $d715e0554b679f1f$var$dispatchUpdate() {\n  const event = new CustomEvent($d715e0554b679f1f$var$CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\nfunction $d715e0554b679f1f$var$handleAndDispatchCustomEvent(name, handler, detail, {\n  discrete: discrete\n}) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, {\n    bubbles: false,\n    cancelable: true,\n    detail: detail\n  });\n  if (handler) target.addEventListener(name, handler, {\n    once: true\n  });\n  if (discrete) $g2vWm$radixuireactprimitive.dispatchDiscreteCustomEvent(target, event);else target.dispatchEvent(event);\n}\nconst $d715e0554b679f1f$export$be92b6f5f03c0fe9 = $d715e0554b679f1f$export$177fb62ff3ec1f22;\nconst $d715e0554b679f1f$export$aecb2ddcb55c95be = $d715e0554b679f1f$export$4d5eb2109db14228;","map":{"version":3,"names":["$d715e0554b679f1f$var$DISMISSABLE_LAYER_NAME","$d715e0554b679f1f$var$CONTEXT_UPDATE","$d715e0554b679f1f$var$POINTER_DOWN_OUTSIDE","$d715e0554b679f1f$var$FOCUS_OUTSIDE","$d715e0554b679f1f$var$originalBodyPointerEvents","$d715e0554b679f1f$var$DismissableLayerContext","$g2vWm$react","createContext","layers","Set","layersWithOutsidePointerEventsDisabled","branches","$d715e0554b679f1f$export$177fb62ff3ec1f22","forwardRef","props","forwardedRef","_node$ownerDocument","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","useContext","node1","setNode","useState","ownerDocument","globalThis","document","force","composedRefs","$g2vWm$radixuireactcomposerefs","useComposedRefs","node","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","indexOf","index","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","$d715e0554b679f1f$var$usePointerDownOutside","event","target","isPointerDownOnBranch","some","branch","contains","defaultPrevented","focusOutside","$d715e0554b679f1f$var$useFocusOutside","isFocusInBranch","$g2vWm$radixuireactuseescapekeydown","useEscapeKeydown","isHighestLayer","preventDefault","useEffect","body","style","pointerEvents","add","$d715e0554b679f1f$var$dispatchUpdate","delete","handleUpdate","addEventListener","removeEventListener","createElement","$g2vWm$radixuireactprimitive","Primitive","div","$parcel$interopDefault","$g2vWm$babelruntimehelpersextends","ref","undefined","onFocusCapture","$g2vWm$radixuiprimitive","composeEventHandlers","onBlurCapture","onPointerDownCapture","Object","assign","displayName","$d715e0554b679f1f$var$BRANCH_NAME","$d715e0554b679f1f$export$4d5eb2109db14228","useRef","current","usePointerDownOutside","handlePointerDownOutside","$g2vWm$radixuireactusecallbackref","useCallbackRef","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","eventDetail","originalEvent","handleAndDispatchPointerDownOutsideEvent","$d715e0554b679f1f$var$handleAndDispatchCustomEvent","discrete","pointerType","once","timerId","window","setTimeout","clearTimeout","useFocusOutside","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","dispatchUpdate","CustomEvent","dispatchEvent","handleAndDispatchCustomEvent","name","handler","detail","bubbles","cancelable","dispatchDiscreteCustomEvent","$d715e0554b679f1f$export$be92b6f5f03c0fe9","$d715e0554b679f1f$export$aecb2ddcb55c95be"],"sources":["packages/react/dismissable-layer/src/index.ts","packages/react/dismissable-layer/src/DismissableLayer.tsx"],"sourcesContent":["export {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n} from './DismissableLayer';\nexport type { DismissableLayerProps } from './DismissableLayer';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ElementRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}