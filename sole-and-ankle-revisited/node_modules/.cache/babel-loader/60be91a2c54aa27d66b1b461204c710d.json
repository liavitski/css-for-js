{"ast":null,"code":"import $67UHm$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { useRef as $67UHm$useRef, createElement as $67UHm$createElement, useCallback as $67UHm$useCallback, forwardRef as $67UHm$forwardRef, Children as $67UHm$Children, useEffect as $67UHm$useEffect, Fragment as $67UHm$Fragment } from \"react\";\nimport { composeEventHandlers as $67UHm$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $67UHm$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $67UHm$createContextScope, createContext as $67UHm$createContext } from \"@radix-ui/react-context\";\nimport { useId as $67UHm$useId } from \"@radix-ui/react-id\";\nimport { useControllableState as $67UHm$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { DismissableLayer as $67UHm$DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { FocusScope as $67UHm$FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { Portal as $67UHm$Portal } from \"@radix-ui/react-portal\";\nimport { Presence as $67UHm$Presence } from \"@radix-ui/react-presence\";\nimport { Primitive as $67UHm$Primitive } from \"@radix-ui/react-primitive\";\nimport { useFocusGuards as $67UHm$useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { RemoveScroll as $67UHm$RemoveScroll } from \"react-remove-scroll\";\nimport { hideOthers as $67UHm$hideOthers } from \"aria-hidden\";\nimport { Slot as $67UHm$Slot } from \"@radix-ui/react-slot\";\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DIALOG_NAME = 'Dialog';\nconst [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $67UHm$createContextScope($5d3850c4d0b4e6c7$var$DIALOG_NAME);\nconst [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME);\n\nconst $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = props => {\n  const {\n    __scopeDialog: __scopeDialog,\n    children: children,\n    open: openProp,\n    defaultOpen: defaultOpen,\n    onOpenChange: onOpenChange,\n    modal = true\n  } = props;\n  const triggerRef = $67UHm$useRef(null);\n  const contentRef = $67UHm$useRef(null);\n  const [open = false, setOpen] = $67UHm$useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange\n  });\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogProvider, {\n    scope: __scopeDialog,\n    triggerRef: triggerRef,\n    contentRef: contentRef,\n    contentId: $67UHm$useId(),\n    titleId: $67UHm$useId(),\n    descriptionId: $67UHm$useId(),\n    open: open,\n    onOpenChange: setOpen,\n    onOpenToggle: $67UHm$useCallback(() => setOpen(prevOpen => !prevOpen), [setOpen]),\n    modal: modal\n  }, children);\n};\n/*#__PURE__*/\n\n\nObject.assign($5d3850c4d0b4e6c7$export$3ddf2d174ce01153, {\n  displayName: $5d3850c4d0b4e6c7$var$DIALOG_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$TRIGGER_NAME = 'DialogTrigger';\nconst $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...triggerProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog);\n  const composedTriggerRef = $67UHm$useComposedRefs(forwardedRef, context.triggerRef);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n    type: \"button\",\n    \"aria-haspopup\": \"dialog\",\n    \"aria-expanded\": context.open,\n    \"aria-controls\": context.contentId,\n    \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n  }, triggerProps, {\n    ref: composedTriggerRef,\n    onClick: $67UHm$composeEventHandlers(props.onClick, context.onOpenToggle)\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, {\n  displayName: $5d3850c4d0b4e6c7$var$TRIGGER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$PORTAL_NAME = 'DialogPortal';\nconst [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {\n  forceMount: undefined\n});\n\nconst $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = props => {\n  const {\n    __scopeDialog: __scopeDialog,\n    forceMount: forceMount,\n    children: children,\n    container: container\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$PortalProvider, {\n    scope: __scopeDialog,\n    forceMount: forceMount\n  }, $67UHm$Children.map(children, child => /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$67UHm$createElement($67UHm$Portal, {\n    asChild: true,\n    container: container\n  }, child))));\n};\n/*#__PURE__*/\n\n\nObject.assign($5d3850c4d0b4e6c7$export$dad7c95542bacce0, {\n  displayName: $5d3850c4d0b4e6c7$var$PORTAL_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$OVERLAY_NAME = 'DialogOverlay';\nconst $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n  const {\n    forceMount = portalContext.forceMount,\n    ...overlayProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);\n  return context.modal ? /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogOverlayImpl, $67UHm$babelruntimehelpersesmextends({}, overlayProps, {\n    ref: forwardedRef\n  }))) : null;\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$bd1d06c79be19e17, {\n  displayName: $5d3850c4d0b4e6c7$var$OVERLAY_NAME\n});\nconst $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...overlayProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);\n  return (\n    /*#__PURE__*/\n    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n    // ie. when `Overlay` and `Content` are siblings\n    $67UHm$createElement($67UHm$RemoveScroll, {\n      as: $67UHm$Slot,\n      allowPinchZoom: true,\n      shards: [context.contentRef]\n    }, /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.div, $67UHm$babelruntimehelpersesmextends({\n      \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n    }, overlayProps, {\n      ref: forwardedRef // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n      ,\n      style: {\n        pointerEvents: 'auto',\n        ...overlayProps.style\n      }\n    })))\n  );\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$CONTENT_NAME = 'DialogContent';\nconst $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const {\n    forceMount = portalContext.forceMount,\n    ...contentProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Presence, {\n    present: forceMount || context.open\n  }, context.modal ? /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })) : /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentNonModal, $67UHm$babelruntimehelpersesmextends({}, contentProps, {\n    ref: forwardedRef\n  })));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$b6d9565de1e068cf, {\n  displayName: $5d3850c4d0b4e6c7$var$CONTENT_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DialogContentModal = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const contentRef = $67UHm$useRef(null);\n  const composedRefs = $67UHm$useComposedRefs(forwardedRef, context.contentRef, contentRef); // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n\n  $67UHm$useEffect(() => {\n    const content = contentRef.current;\n    if (content) return $67UHm$hideOthers(content);\n  }, []);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs // we make sure focus isn't trapped once `DialogContent` has been closed\n    ,\n    trapFocus: context.open,\n    disableOutsidePointerEvents: true,\n    onCloseAutoFocus: $67UHm$composeEventHandlers(props.onCloseAutoFocus, event => {\n      var _context$triggerRef$c;\n\n      event.preventDefault();\n      (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();\n    }),\n    onPointerDownOutside: $67UHm$composeEventHandlers(props.onPointerDownOutside, event => {\n      const originalEvent = event.detail.originalEvent;\n      const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n      const isRightClick = originalEvent.button === 2 || ctrlLeftClick; // If the event is a right-click, we shouldn't close because\n      // it is effectively as if we right-clicked the `Overlay`.\n\n      if (isRightClick) event.preventDefault();\n    }) // When focus is trapped, a `focusout` event may still happen.\n    ,\n    onFocusOutside: $67UHm$composeEventHandlers(props.onFocusOutside, event => event.preventDefault())\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DialogContentNonModal = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);\n  const hasInteractedOutsideRef = $67UHm$useRef(false);\n  const hasPointerDownOutsideRef = $67UHm$useRef(false);\n  return /*#__PURE__*/$67UHm$createElement($5d3850c4d0b4e6c7$var$DialogContentImpl, $67UHm$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef,\n    trapFocus: false,\n    disableOutsidePointerEvents: false,\n    onCloseAutoFocus: event => {\n      var _props$onCloseAutoFoc;\n\n      (_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event);\n\n      if (!event.defaultPrevented) {\n        var _context$triggerRef$c2;\n\n        if (!hasInteractedOutsideRef.current) (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(); // Always prevent auto focus because we either focus manually or want user agent focus\n\n        event.preventDefault();\n      }\n\n      hasInteractedOutsideRef.current = false;\n      hasPointerDownOutsideRef.current = false;\n    },\n    onInteractOutside: event => {\n      var _props$onInteractOuts, _context$triggerRef$c3;\n\n      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event);\n\n      if (!event.defaultPrevented) {\n        hasInteractedOutsideRef.current = true;\n        if (event.detail.originalEvent.type === 'pointerdown') hasPointerDownOutsideRef.current = true;\n      } // Prevent dismissing when clicking the trigger.\n      // As the trigger is already setup to close, without doing so would\n      // cause it to close and immediately open.\n\n\n      const target = event.target;\n      const targetIsTrigger = (_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target);\n      if (targetIsTrigger) event.preventDefault(); // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n      // we will get the pointer down outside event on the trigger, but then a subsequent\n      // focus outside event on the container, we ignore any focus outside event when we've\n      // already had a pointer down outside event.\n\n      if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) event.preventDefault();\n    }\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DialogContentImpl = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    trapFocus: trapFocus,\n    onOpenAutoFocus: onOpenAutoFocus,\n    onCloseAutoFocus: onCloseAutoFocus,\n    ...contentProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog);\n  const contentRef = $67UHm$useRef(null);\n  const composedRefs = $67UHm$useComposedRefs(forwardedRef, contentRef); // Make sure the whole tree has focus guards as our `Dialog` will be\n  // the last element in the DOM (beacuse of the `Portal`)\n\n  $67UHm$useFocusGuards();\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Fragment, null, /*#__PURE__*/$67UHm$createElement($67UHm$FocusScope, {\n    asChild: true,\n    loop: true,\n    trapped: trapFocus,\n    onMountAutoFocus: onOpenAutoFocus,\n    onUnmountAutoFocus: onCloseAutoFocus\n  }, /*#__PURE__*/$67UHm$createElement($67UHm$DismissableLayer, $67UHm$babelruntimehelpersesmextends({\n    role: \"dialog\",\n    id: context.contentId,\n    \"aria-describedby\": context.descriptionId,\n    \"aria-labelledby\": context.titleId,\n    \"data-state\": $5d3850c4d0b4e6c7$var$getState(context.open)\n  }, contentProps, {\n    ref: composedRefs,\n    onDismiss: () => context.onOpenChange(false)\n  }))), false);\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$TITLE_NAME = 'DialogTitle';\nconst $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...titleProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.h2, $67UHm$babelruntimehelpersesmextends({\n    id: context.titleId\n  }, titleProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$16f7638e4a34b909, {\n  displayName: $5d3850c4d0b4e6c7$var$TITLE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = 'DialogDescription';\nconst $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...descriptionProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.p, $67UHm$babelruntimehelpersesmextends({\n    id: context.descriptionId\n  }, descriptionProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, {\n  displayName: $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst $5d3850c4d0b4e6c7$var$CLOSE_NAME = 'DialogClose';\nconst $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /*#__PURE__*/$67UHm$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeDialog: __scopeDialog,\n    ...closeProps\n  } = props;\n  const context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);\n  return /*#__PURE__*/$67UHm$createElement($67UHm$Primitive.button, $67UHm$babelruntimehelpersesmextends({\n    type: \"button\"\n  }, closeProps, {\n    ref: forwardedRef,\n    onClick: $67UHm$composeEventHandlers(props.onClick, () => context.onOpenChange(false))\n  }));\n});\n/*#__PURE__*/\n\nObject.assign($5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac, {\n  displayName: $5d3850c4d0b4e6c7$var$CLOSE_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction $5d3850c4d0b4e6c7$var$getState(open) {\n  return open ? 'open' : 'closed';\n}\n\nconst $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = 'DialogTitleWarning';\nconst [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $67UHm$createContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {\n  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,\n  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,\n  docsSlug: 'dialog'\n});\n\nconst $5d3850c4d0b4e6c7$var$TitleWarning = ({\n  titleId: titleId\n}) => {\n  const titleWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME);\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n  $67UHm$useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n  return null;\n};\n\nconst $5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\nconst $5d3850c4d0b4e6c7$var$DescriptionWarning = ({\n  contentRef: contentRef,\n  descriptionId: descriptionId\n}) => {\n  const descriptionWarningContext = $5d3850c4d0b4e6c7$var$useWarningContext($5d3850c4d0b4e6c7$var$DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n  $67UHm$useEffect(() => {\n    var _contentRef$current;\n\n    const describedById = (_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.getAttribute('aria-describedby'); // if we have an id and the user hasn't set aria-describedby={undefined}\n\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n  return null;\n};\n\nconst $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153;\nconst $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88;\nconst $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0;\nconst $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17;\nconst $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf;\nconst $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909;\nconst $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5;\nconst $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;\nexport { $5d3850c4d0b4e6c7$export$cc702773b8ea3e41 as createDialogScope, $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 as Dialog, $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 as DialogTrigger, $5d3850c4d0b4e6c7$export$dad7c95542bacce0 as DialogPortal, $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 as DialogOverlay, $5d3850c4d0b4e6c7$export$b6d9565de1e068cf as DialogContent, $5d3850c4d0b4e6c7$export$16f7638e4a34b909 as DialogTitle, $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 as DialogDescription, $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac as DialogClose, $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 as Root, $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 as Trigger, $5d3850c4d0b4e6c7$export$602eac185826482c as Portal, $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff as Overlay, $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 as Content, $5d3850c4d0b4e6c7$export$f99233281efd08a0 as Title, $5d3850c4d0b4e6c7$export$393edc798c47379d as Description, $5d3850c4d0b4e6c7$export$f39c2d165cd861fe as Close, $5d3850c4d0b4e6c7$export$69b62a49393917d6 as WarningProvider };","map":{"version":3,"sources":["packages/react/dialog/src/Dialog.tsx"],"names":["DIALOG_NAME","createContextScope","createDialogContext","Dialog","props","open","modal","triggerRef","React","contentRef","useControllableState","prop","defaultProp","onChange","useId","setOpen","prevOpen","TRIGGER_NAME","DialogTrigger","context","useDialogContext","composedTriggerRef","useComposedRefs","getState","composeEventHandlers","PORTAL_NAME","forceMount","DialogPortal","child","OVERLAY_NAME","DialogOverlay","portalContext","usePortalContext","DialogOverlayImpl","pointerEvents","overlayProps","CONTENT_NAME","DialogContent","DialogContentModal","composedRefs","content","hideOthers","event","originalEvent","ctrlLeftClick","isRightClick","DialogContentNonModal","hasInteractedOutsideRef","hasPointerDownOutsideRef","target","targetIsTrigger","DialogContentImpl","useFocusGuards","TITLE_NAME","DialogTitle","DESCRIPTION_NAME","DialogDescription","CLOSE_NAME","DialogClose","TITLE_WARNING_NAME","createContext","contentName","titleName","docsSlug","TitleWarning","titleWarningContext","useWarningContext","MESSAGE","hasTitle","document","DESCRIPTION_WARNING_NAME","DescriptionWarning","descriptionWarningContext","describedById","descriptionId","hasDescription","console","Root","Trigger","Portal","Overlay","Content","Title","Description","Close"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { Slot } from '@radix-ui/react-slot';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement>;\n  contentRef: React.RefObject<DialogContentElement>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ElementRef<typeof DismissableLayer>;\ntype DismissableLayerProps = Radix.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (beacuse of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ElementRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = Radix.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ElementRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = Radix.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ElementRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) throw new Error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"]},"metadata":{},"sourceType":"module"}