{"ast":null,"code":"var $iMixA$babelruntimehelpersextends = require(\"@babel/runtime/helpers/extends\");\n\nvar $iMixA$react = require(\"react\");\n\nvar $iMixA$reactdom = require(\"react-dom\");\n\nvar $iMixA$radixuireactslot = require(\"@radix-ui/react-slot\");\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n$parcel$export(module.exports, \"Primitive\", () => $c3def6332c2749a6$export$250ffa63cdc0d034);\n$parcel$export(module.exports, \"Root\", () => $c3def6332c2749a6$export$be92b6f5f03c0fe9);\n$parcel$export(module.exports, \"dispatchDiscreteCustomEvent\", () => $c3def6332c2749a6$export$6d1a0317bde7de7f);\nconst $c3def6332c2749a6$var$NODES = ['a', 'button', 'div', 'form', 'h2', 'h3', 'img', 'input', 'label', 'li', 'nav', 'ol', 'p', 'span', 'svg', 'ul']; // Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst $c3def6332c2749a6$export$250ffa63cdc0d034 = $c3def6332c2749a6$var$NODES.reduce((primitive, node) => {\n  const Node = /*#__PURE__*/$iMixA$react.forwardRef((props, forwardedRef) => {\n    const {\n      asChild: asChild,\n      ...primitiveProps\n    } = props;\n    const Comp = asChild ? $iMixA$radixuireactslot.Slot : node;\n    $iMixA$react.useEffect(() => {\n      window[Symbol.for('radix-ui')] = true;\n    }, []);\n    return /*#__PURE__*/$iMixA$react.createElement(Comp, $parcel$interopDefault($iMixA$babelruntimehelpersextends)({}, primitiveProps, {\n      ref: forwardedRef\n    }));\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive,\n    [node]: Node\n  };\n}, {});\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n* Flush custom event dispatch\n* https://github.com/radix-ui/primitives/pull/1378\n*\n* React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n*\n* Internally, React prioritises events in the following order:\n*  - discrete\n*  - continuous\n*  - default\n*\n* https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n*\n* `discrete` is an  important distinction as updates within these events are applied immediately.\n* React however, is not able to infer the priority of custom event types due to how they are detected internally.\n* Because of this, it's possible for updates from custom events to be unexpectedly batched when\n* dispatched by another `discrete` event.\n*\n* In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n* This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n* is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n* For example:\n*\n* dispatching a known click 👎\n* target.dispatchEvent(new Event(‘click’))\n*\n* dispatching a custom type within a non-discrete event 👎\n* onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n*\n* dispatching a custom type within a `discrete` event 👍\n* onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n*\n* Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n* this utility with them. This is because it's possible for those handlers to be called implicitly during render\n* e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n*/\n\nfunction $c3def6332c2749a6$export$6d1a0317bde7de7f(target, event) {\n  if (target) $iMixA$reactdom.flushSync(() => target.dispatchEvent(event));\n}\n/* -----------------------------------------------------------------------------------------------*/\n\n\nconst $c3def6332c2749a6$export$be92b6f5f03c0fe9 = $c3def6332c2749a6$export$250ffa63cdc0d034;","map":{"version":3,"sources":["packages/react/primitive/src/Primitive.tsx"],"names":["NODES","Primitive","Node","Comp","asChild","Slot","React","window","Symbol","node","target","Root"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMA,2BAAK,GAAG,CAAA,GAAA,EAAA,QAAA,EAAA,KAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,CAAd,C,CAAA;AAoBA;AACA;;AAcA;;AAEA;;AAEA,MAAMC,yCAAS,GAAG,2BAAK,CAAL,MAAA,CAAa,CAAA,SAAA,EAAA,IAAA,KAAqB;AAClD,QAAMC,IAAI,GAAA,aAAG,YAAA,CAAA,UAAA,CAAiB,CAAA,KAAA,EAAA,YAAA,KAAkE;AAC9F,UAAM;eAAA,OAAA;AAAW,SAAX;AAAA,QAAN,KAAA;AACA,UAAMC,IAAS,GAAGC,OAAO,GAAGC,uBAAAA,CAAH,IAAA,GAAzB,IAAA;AAEAC,IAAAA,YAAAA,CAAAA,SAAAA,CAAgB,MAAM;AACnBC,MAAAA,MAAD,CAAgBC,MAAM,CAANA,GAAAA,CAAhB,UAAgBA,CAAhB,CAACD,GAAD,IAACA;AADHD,KAAAA,EAAAA,EAAAA;AAIA,WAAA,aAAO,YAAA,CAAA,aAAA,CAAA,IAAA,EAAA,sBAAA,CAAA,iCAAA,CAAA,CAAA,EAAA,EAAA,cAAA,EAAP;AAAiC,MAAA,GAAG,EAAH;AAAjC,KAAO,CAAA,CAAP;AARF,GAAa,CAAb;AAWAJ,EAAAA,IAAI,CAAJA,WAAAA,GAAoB,aAAYO,IAAhCP,EAAAA;AAEA,SAAO,EAAE,GAAF,SAAA;AAAgB,KAAA,IAAA,GAAA;AAAhB,GAAP;AAdgB,CAAA,EAAlB,EAAkB,CAAlB;AAiBA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA,SAAA,yCAAA,CAAA,MAAA,EAAA,KAAA,EAA2F;AACzF,MAAA,MAAA,EAAY,eAAA,CAAA,SAAA,CAAmB,MAAMQ,MAAM,CAANA,aAAAA,CAAzB,KAAyBA,CAAzB;AACb;AAED;;;AAEA,MAAMC,yCAAI,GAAV,yCAAA","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\n// Temporary while we await merge of this fix:\n// https://github.com/DefinitelyTyped/DefinitelyTyped/pull/55396\n// prettier-ignore\ntype PropsWithoutRef<P> = P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\ntype ComponentPropsWithoutRef<T extends React.ElementType> = PropsWithoutRef<\n  React.ComponentProps<T>\n>;\n\ntype Primitives = { [E in typeof NODES[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    React.useEffect(() => {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }, []);\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not nessesary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { ComponentPropsWithoutRef, PrimitivePropsWithRef };\n"]},"metadata":{},"sourceType":"script"}