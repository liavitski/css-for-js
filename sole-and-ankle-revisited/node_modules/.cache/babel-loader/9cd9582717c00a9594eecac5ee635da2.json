{"ast":null,"code":"var $cnctE$react = require(\"react\");\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\n$parcel$export(module.exports, \"FocusGuards\", () => $71476a6ed7dbbaf3$export$ac5b58043b79449b);\n$parcel$export(module.exports, \"Root\", () => $71476a6ed7dbbaf3$export$be92b6f5f03c0fe9);\n$parcel$export(module.exports, \"useFocusGuards\", () => $71476a6ed7dbbaf3$export$b7ece24a22aeda8c);\n/** Number of components which have requested interest to have focus guards */\n\nlet $71476a6ed7dbbaf3$var$count = 0;\n\nfunction $71476a6ed7dbbaf3$export$ac5b58043b79449b(props) {\n  $71476a6ed7dbbaf3$export$b7ece24a22aeda8c();\n  return props.children;\n}\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\n\n\nfunction $71476a6ed7dbbaf3$export$b7ece24a22aeda8c() {\n  $cnctE$react.useEffect(() => {\n    var _edgeGuards$, _edgeGuards$2;\n\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $71476a6ed7dbbaf3$var$createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $71476a6ed7dbbaf3$var$createFocusGuard());\n    $71476a6ed7dbbaf3$var$count++;\n    return () => {\n      if ($71476a6ed7dbbaf3$var$count === 1) document.querySelectorAll('[data-radix-focus-guard]').forEach(node => node.remove());\n      $71476a6ed7dbbaf3$var$count--;\n    };\n  }, []);\n}\n\nfunction $71476a6ed7dbbaf3$var$createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst $71476a6ed7dbbaf3$export$be92b6f5f03c0fe9 = $71476a6ed7dbbaf3$export$ac5b58043b79449b;","map":{"version":3,"sources":["packages/react/focus-guards/src/FocusGuards.tsx"],"names":["count","useFocusGuards","props","React","edgeGuards","document","createFocusGuard","node","element","Root"],"mappings":";;;;;;;;;;;;;;AAEA;;AACA,IAAIA,2BAAK,GAAT,CAAA;;AAEA,SAAA,yCAAA,CAAA,KAAA,EAAiC;AAC/BC,EAAAA,yCAAAA;AACA,SAAOC,KAAK,CAAZ,QAAA;AACD;AAED;;;AAGA;;;AACA,SAAA,yCAAA,GAA0B;AACxBC,EAAAA,YAAAA,CAAAA,SAAAA,CAAgB,MAAM;AAAA,QAAA,YAAA,EAAA,aAAA;;AACpB,UAAMC,UAAU,GAAGC,QAAQ,CAARA,gBAAAA,CAAnB,0BAAmBA,CAAnB;AACAA,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,qBAAAA,CAAAA,YAAAA,EAAAA,CAAAA,YAAAA,GAAkDD,UAAU,CAA5DC,CAA4D,CAA5DA,MAAAA,IAAAA,IAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAAA,YAAAA,GAAmEC,sCAAnED,EAAAA;AACAA,IAAAA,QAAQ,CAARA,IAAAA,CAAAA,qBAAAA,CAAAA,WAAAA,EAAAA,CAAAA,aAAAA,GAAiDD,UAAU,CAA3DC,CAA2D,CAA3DA,MAAAA,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,aAAAA,GAAkEC,sCAAlED,EAAAA;AACAL,IAAAA,2BAAAA;AAEA,WAAO,MAAM;AACX,UAAIA,2BAAK,KAAT,CAAA,EACE,QAAQ,CAAR,gBAAA,CAAA,0BAAA,EAAA,OAAA,CAA8D,IAACO,IAASA,IAAI,CAA5E,MAAwEA,EAAxE;AAEFP,MAAAA,2BAAAA;AAJF,KAAA;AANFG,GAAAA,EAAAA,EAAAA;AAaD;;AAED,SAAA,sCAAA,GAA4B;AAC1B,QAAMK,OAAO,GAAGH,QAAQ,CAARA,aAAAA,CAAhB,MAAgBA,CAAhB;AACAG,EAAAA,OAAO,CAAPA,YAAAA,CAAAA,wBAAAA,EAAAA,EAAAA;AACAA,EAAAA,OAAO,CAAPA,QAAAA,GAAAA,CAAAA;AACAA,EAAAA,OAAO,CAAPA,KAAAA,CAAAA,OAAAA,GAAAA,kEAAAA;AACA,SAAA,OAAA;AACD;;AAED,MAAMC,yCAAI,GAAV,yCAAA","sourcesContent":["import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\nfunction FocusGuards(props: any) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n}\n\nfunction createFocusGuard() {\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.cssText = 'outline: none; opacity: 0; position: fixed; pointer-events: none';\n  return element;\n}\n\nconst Root = FocusGuards;\n\nexport {\n  FocusGuards,\n  //\n  Root,\n  //\n  useFocusGuards,\n};\n"]},"metadata":{},"sourceType":"script"}