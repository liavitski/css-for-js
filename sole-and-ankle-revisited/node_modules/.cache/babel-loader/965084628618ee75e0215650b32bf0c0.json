{"ast":null,"code":"var $47woD$react = require(\"react\");\n\nvar $47woD$radixuireactuselayouteffect = require(\"@radix-ui/react-use-layout-effect\");\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\n$parcel$export(module.exports, \"useId\", () => $dc478e4659f630c5$export$f680877a34711e37);\n\nconst $dc478e4659f630c5$var$useReactId = $47woD$react['useId'.toString()] || (() => undefined);\n\nlet $dc478e4659f630c5$var$count = 0;\n\nfunction $dc478e4659f630c5$export$f680877a34711e37(deterministicId) {\n  const [id, setId] = $47woD$react.useState($dc478e4659f630c5$var$useReactId()); // React versions older than 18 will have client-side ids only.\n\n  $47woD$radixuireactuselayouteffect.useLayoutEffect(() => {\n    if (!deterministicId) setId(reactId => reactId !== null && reactId !== void 0 ? reactId : String($dc478e4659f630c5$var$count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}","map":{"version":3,"sources":["packages/react/id/src/id.tsx"],"names":["useReactId","React","count","useLayoutEffect","reactId","String","deterministicId","id"],"mappings":";;;;;;;;;;;;;;;AAIA,MAAMA,gCAAU,GAAIC,YAAD,CAAe,QAAf,QAAe,EAAf,CAACA,KAAsC,MAAvC,SAACA,CAApB;;AACA,IAAIC,2BAAK,GAAT,CAAA;;AAEA,SAAA,yCAAA,CAAA,eAAA,EAAiD;AAC/C,QAAM,CAAA,EAAA,EAAA,KAAA,IAAcD,YAAK,CAALA,QAAAA,CAAmCD,gCADR,EAC3BC,CAApB,CAD+C,CAC/C;;AAEAE,EAAAA,kCAAAA,CAAAA,eAAAA,CAAgB,MAAM;AACpB,QAAI,CAAJ,eAAA,EAAsB,KAAK,CAAC,OAACC,IAAYA,OAAb,KAAA,IAAaA,IAAAA,OAAb,KAAA,KAAA,CAAaA,GAAb,OAAaA,GAAWC,MAAM,CAACH,2BAAhC,EAA+B,CAA/B,CAAL;AADT,GAAfC,EAEG,CAAA,eAAA,CAFHA;AAGA,SAAOG,eAAe,KAAKC,EAAE,GAAI,SAAQA,EAAZ,EAAA,GAA7B,EAAsB,CAAtB;AACD","sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\nexport { useId };\n"]},"metadata":{},"sourceType":"script"}